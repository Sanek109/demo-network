{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/MyPost.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/MyPost.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","Contact","contactTitle","contactValue","className","classes","contact","ProfileInfo","profile","isOwner","savePhoto","Preloader","avatar","type","target","files","length","src","photos","large","avatarPhoto","discription","fullName","info","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","MyPost","item","post","likeCount","maxLength50","maxLengthCreator","MyPosts","React","memo","postsElements","profileReducer","postsData","el","posts","AddPostFormRedux","onSubmit","addPost","newPostBody","reduxForm","form","handleSubmit","Field","name","placeholder","validate","required","component","Textarea","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","authReducer","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.2af649bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__Nqn_a\",\"avatar\":\"ProfileInfo_avatar__3JiMw\",\"img\":\"ProfileInfo_img__xxE3Q\",\"contact\":\"ProfileInfo_contact__3pO2o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2GpLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1qU_h\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (<div>\r\n        {!editMode &&\r\n        <div>\r\n            <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || 'No status!'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onChangeStatus} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n        }\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport avatarPhoto from '../../../assets/images/avatarPhoto.png';\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, status, updateStatus, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.profile}>\r\n                <div className={classes.avatar}>\r\n                    {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n                    <img src={profile.photos.large || avatarPhoto} />\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n                </div>\r\n                <div className={classes.discription}>\r\n                    <h4>{profile.fullName}</h4>\r\n                    <div className={classes.info}>\r\n                        <div>\r\n                            <b>Looking for a job:</b> {profile.lookingForAJob ? 'Yes!' : 'No!' }\r\n                        </div>\r\n                        {profile.lookingForAJob && <div>\r\n                            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n                        </div>}\r\n                        <div>\r\n                            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                            return <Contact  key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n                        })}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\n\r\nconst MyPost = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <div>\r\n                    <img src='http://pngimg.com/uploads/prisoner/prisoner_PNG27.png' />\r\n                    {props.post}\r\n                </div>\r\n                <span>{props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport MyPost from './Post/MyPost';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formsControls/FormControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MyPosts = React.memo (props => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props  || nextState != this.state;\r\n    // }\r\n    let postsElements = props.profileReducer.postsData.map((el, key) => <MyPost post={el.post}\r\n                                                                                likeCount={el.likeCount}\r\n                                                                                key={key}/>)\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.posts}>\r\n                <p>My posts</p>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name='newPostBody' placeholder='Enter your post' validate={[required, maxLength50]}\r\n               component={Textarea}/>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'addPostForm'\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileReducer: state.profileReducer\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} isOwner={isOwner} savePhoto={savePhoto} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto} from \"../../redux/profilePageReducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId)\r\n        this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus} />\r\n                         savePhoto={this.props.savePhoto}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=> ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}