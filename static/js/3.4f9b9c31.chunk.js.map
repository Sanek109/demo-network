{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/avatarPhoto.png","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/MyPost.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/MyPost.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","avatar","src","photos","large","avatarPhoto","discription","info","Preloader","MyPost","item","post","likeCount","maxLength50","maxLengthCreator","MyPosts","React","memo","postsElements","profileReducer","postsData","map","el","key","posts","AddPostFormRedux","onSubmit","addPost","newPostBody","reduxForm","form","handleSubmit","Field","name","placeholder","validate","required","component","Textarea","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","authReducer","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.4f9b9c31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__Nqn_a\",\"avatar\":\"ProfileInfo_avatar__3JiMw\",\"discription\":\"ProfileInfo_discription__hpHyE\",\"info\":\"ProfileInfo_info__k84bt\",\"img\":\"ProfileInfo_img__xxE3Q\"};","module.exports = __webpack_public_path__ + \"static/media/avatarPhoto.fdc0f842.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2GpLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPost_item__1qU_h\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (<div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || 'No status!'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input onChange={onChangeStatus} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n        }\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport avatarPhoto from '../../../assets/images/avatarPhoto.png';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*<div className={classes.img}>*/}\r\n            {/*    <img src='https://png.pngtree.com/thumb_back/fw800/background/20190223/ourmid/pngtree-prisoner-cartoon-background-in-dark-prison-corner-crime-image_66770.jpg' />*/}\r\n            {/*</div>*/}\r\n            <div className={classes.profile}>\r\n                <div className={classes.avatar}>\r\n                    <img src={props.profile.photos.large != null ? props.profile.photos.large : avatarPhoto} />\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                </div>\r\n                <div className={classes.discription}>\r\n                    <h4>Alex Moren</h4>\r\n                    <div className={classes.info}>\r\n                        <p>Date if Birth: 3 april 1993</p>\r\n                        <p>City: Bobruisk</p>\r\n                        <p>Education: High School</p>\r\n                        <p>Web site: няма</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\n\r\nconst MyPost = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.item}>\r\n                <div>\r\n                    <img src='http://pngimg.com/uploads/prisoner/prisoner_PNG27.png' />\r\n                    {props.post}\r\n                </div>\r\n                <span>{props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPost;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport MyPost from './Post/MyPost';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formsControls/FormControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst MyPosts = React.memo (props => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props  || nextState != this.state;\r\n    // }\r\n    let postsElements = props.profileReducer.postsData.map((el, key) => <MyPost post={el.post}\r\n                                                                                likeCount={el.likeCount}\r\n                                                                                key={key}/>)\r\n\r\n    let addNewPost = (value) => {\r\n        props.addPost(value.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.posts}>\r\n                <p>My posts</p>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst AddPostForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field name='newPostBody' placeholder='Enter your post' validate={[required, maxLength50]}\r\n               component={Textarea}/>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({\r\n    form: 'addPostForm'\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profileReducer: state.profileReducer\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profilePageReducer\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state)=> ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.userId,\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}