{"version":3,"sources":["assets/images/avatarPhoto.png","redux/dialogsPageReducer.js","Components/Users/Users.module.css","assets/images/preloader.gif","Components/common/formsControls/FormControls.js","Components/Navbar/Navbar.module.css","Components/Navbar/Navbar.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Components/utils/object-helpers.js","redux/usersPageReducer.js","Components/common/paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","redux/useres-selectors.js","Components/Users/UsersContainer.js","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.js","Components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","redux/redux-store.js","index.js","Components/common/formsControls/FormControl.module.css","Components/common/Preloader/Preloader.js","Components/utils/validators/validators.js","Components/common/paginator/Paginator.module.css","api/instance.js","api/api.js","Components/Header/Header.module.css","hoc/WithAuthRedirect.js","redux/profilePageReducer.js"],"names":["module","exports","initialState","messagesData","id","message","dialogsData","name","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","component","validators","text","validate","Navbar","classes","nav","item","activeClassName","activeLink","to","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","pageSize","totalUserCount","currentPage","isFetching","isFollowingProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingIsProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","userReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionsize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","status","Users","portionSize","getUsers","getPageSize","createSelector","getTotalUserCount","getCurrentPage","getIsFetching","getIsFollowingProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","usersAPI","followUser","bind","unfollowUser","page","response","totalCount","withAuthRedirect","Header","header","loginBlock","isAuth","login","logout","SET_USER_DATA","initalState","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","getCaptchaUrl","securityAPI","url","authReducer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","password","rememberMe","captcha","messages","length","stopSubmit","_error","formData","remeberMe","initialized","appReducer","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","then","reducers","combineReducers","profileReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","preloader","value","maxLength","instance","axios","baseURL","withCredentials","headers","get","post","delete","profileAPI","getProfile","getStatus","updateStatus","put","savePhoto","filePhoto","FormData","append","mapStateToPropsForRedirect","RedirectComponent","postsData","likeCount","profile","addPostActionCreator","newPostBody","setStatus","getUserProfile","file","newPost","postId"],"mappings":"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","file":"static/js/main.45a59de0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatarPhoto.f1664a55.png\";","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'Hello my friend!'},\r\n        {id: 2, message: 'Good'},\r\n        {id: 3, message: 'Where are you?'},\r\n        {id: 4, message: 'Minsk!'}\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: 'Sveta'},\r\n        {id: 2, name: 'Alex'},\r\n        {id: 3, name: 'Dima'},\r\n        {id: 4, name: 'Andrey'},\r\n        {id: 5, name: 'Valera'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2TSn7\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.73919b14.gif\";","import React from 'react';\r\nimport styles from './FormControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validators, type = null, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               type={type}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}/>{text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3bZ0i\",\"item\":\"Navbar_item__25ZX3\",\"activeLink\":\"Navbar_activeLink__2eHPT\"};","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/profile'>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/dialogs'>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/news'>*/}\r\n            {/*        News*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/music'>*/}\r\n            {/*        Music*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/users'>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/settings'>*/}\r\n            {/*        Settings*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Components/utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingProgress: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                    // state.users.map(u => {\r\n                    // if (u.id === action.userId) {\r\n                    //     return {...u, followed: true}\r\n                    // }\r\n                    // return u;\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                //     state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUserCount: action.totalUserCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.isFetching\r\n                    ? [...state.isFollowingProgress, action.userId]\r\n                    : state.isFollowingProgress.filter(id => !id == action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (count) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUserCount: count\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleFollowingIsProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingIsProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingIsProgress(false, userId))\r\n\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page));\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default userReducer;","import React, {useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionsize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionsize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionsize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionsize;\r\n\r\n    return (<div className={classes.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Prev</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber && <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>}\r\n    </div>)\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport userPhoto from '../../assets/images/avatarPhoto.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst User = ({user, isFollowingProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={isFollowingProgress.some(id => id === user.id)} onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                        : <button disabled={isFollowingProgress.some(id => id === user.id)} onClick={() => {follow(user.id)}}>Follow</button>}\r\n                        </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.status}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div>\r\n                        {'user.location.country'}\r\n                    </div>\r\n                    <div>\r\n                        {'user.location.city'}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ({currentPage, totalUserCount, pageSize, onPageChanged, users, portionSize, ...props}) => {\r\n\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUserCount} pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n\r\n        {\r\n            users.map(u => <User user={u} key={u.id} isFollowingProgress={props.isFollowingProgress} follow={props.follow} unfollow={props.unfollow} />)\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nexport const getUsers = (state) => {\r\n    return state.userReducer.users\r\n}\r\n\r\nexport const getUsersSuper = createSelector(() => {\r\n\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.userReducer.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.userReducer.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.userReducer.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.userReducer.isFetching\r\n}\r\n\r\nexport const  getIsFollowingProgress = (state) => {\r\n    return state.userReducer.isFollowingProgress\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.userReducer.portionSize\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingIsProgress,\r\n    requestUsers\r\n} from '../../redux/usersPageReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching, getIsFollowingProgress,\r\n    getPageSize, getPortionSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/useres-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUserCount={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   onPageChanged={this.onPageChanged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFollowingProgress={this.props.isFollowingProgress}\r\n                   toggleFollowingIsProgress={this.props.toggleFollowingIsProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n// //     return {\r\n// //         users: state.userReducer.users,\r\n// //         pageSize: state.userReducer.pageSize,\r\n// //         totalUserCount: state.userReducer.totalUserCount,\r\n// //         currentPage: state.userReducer.currentPage,\r\n// //         isFetching: state.userReducer.isFetching,\r\n// //         isFollowingProgress: state.userReducer.isFollowingProgress\r\n// //     }\r\n// // }\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingIsProgress,\r\n    requestUsers\r\n}), withAuthRedirect)(UsersContainer);\r\n\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='http://pngimg.com/uploads/prison/prison_PNG37.png' />\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <button onClick={props.logout}>Log Out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initalState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        }\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nconst getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        captchaUrl\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    debugger\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return (\r\n        <Header {...props} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    login: state.authReducer.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {Input, createField} from \"../common/formsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/formsControls/FormControl.module.css';\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (<form onSubmit={handleSubmit}>\r\n        {createField('Login', 'email', Input, [required, maxLength30])}\r\n        {createField('Password', 'password', Input, [required, maxLength30], 'password')}\r\n        {createField(null, 'remember Me', Input, null, 'checkbox', 'RememberMe')}\r\n\r\n        {captchaUrl && <img src={captchaUrl} />}\r\n        {captchaUrl && (createField('Symbols from image', 'captcha', Input, [required], {}))}\r\n\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.remeberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (<div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.authReducer.captchaUrl,\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initislizedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        promise.then(() => {\r\n            dispatch(initislizedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            {<Component {...props} />}\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport News from './Components/News/News';\nimport Music from './Components/Music/Music';\nimport Settings from './Components/Settings/Settings';\n// import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\n// import ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import(\"./Components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./Components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n        <BrowserRouter>\n          <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n              <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n              <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n              <Route path='/users' render={() => <UsersContainer/>}/>\n              <Route path='/login' render={() => <Login/>}/>\n              <Route path='/news' component={News}/>\n              <Route path='/music' component={Music}/>\n              <Route path='/settings' component={Settings}/>\n            </div>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profilePageReducer\";\r\nimport dialogsReducer from \"./dialogsPageReducer\";\r\nimport userReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    userReducer,\r\n    authReducer,\r\n    appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__26MVD\",\"error\":\"FormControl_error__3gqhr\",\"formSummaryError\":\"FormControl_formSummaryError__fxO7Q\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2xsKq\",\"pageNumber\":\"Paginator_pageNumber__2SmYi\",\"selectedPage\":\"Paginator_selectedPage__3yHDt\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4e70832-d7f2-4bf3-a44f-4c30bbf3ab78'}\r\n})\r\n\r\n\r\nexport default instance;","import instance from \"./instance\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n\r\n    savePhoto(filePhoto) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", filePhoto)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n\r\n    login(email, password, remeberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, remeberMe, captcha})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__p1oI7\",\"loginBlock\":\"Header_loginBlock__1ODKK\"};","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initalState = {\r\n    postsData: [\r\n        {id: 1, post: 'How are you?', likeCount: '2'},\r\n        {id: 2, post: 'My second post!', likeCount: '6'},\r\n        {id: 3, post: 'IT-KamaSutra cool!', likeCount: '10'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                post: action.newPostBody,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    }\r\n}\r\n\r\nconst setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}