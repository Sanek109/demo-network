{"version":3,"sources":["api/instance.js","api/api.js","redux/dialogsPageReducer.js","Components/Users/Users.module.css","assets/images/prisoner_PNG27.png","assets/images/preloader.gif","Components/Navbar/Navbar.jsx","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Components/utils/object-helpers.js","redux/usersPageReducer.js","Components/common/paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","redux/useres-selectors.js","Components/Users/UsersContainer.js","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.js","Components/Login/Login.jsx","redux/app-reducer.js","hoc/withSuspense.js","App.js","redux/redux-store.js","index.js","Components/Navbar/Navbar.module.css","Components/common/formsControls/FormControls.js","Components/common/formsControls/FormControl.module.css","Components/common/Preloader/Preloader.js","Components/utils/validators/validators.js","Components/common/paginator/Paginator.module.css","Components/Header/Header.module.css","hoc/WithAuthRedirect.js","redux/profilePageReducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","followUser","id","post","unfollowUser","delete","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","authAPI","me","login","email","password","remeberMe","logout","initialState","messagesData","message","dialogsData","name","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","module","exports","Navbar","className","classes","nav","item","activeClassName","activeLink","to","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjectProps","map","u","users","totalUserCount","isFetching","isFollowingProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingIsProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","userReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionsize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","Users","props","portionSize","getPageSize","createSelector","getTotalUserCount","getCurrentPage","getIsFetching","getIsFollowingProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","response","totalCount","withAuthRedirect","Header","header","loginBlock","isAuth","SET_USER_DATA","initalState","setAuthUserData","getAuthUserData","authReducer","HeaderContainer","maxLength30","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","style","formSummaryError","rememberMe","messages","length","stopSubmit","_error","formData","initialized","appReducer","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","component","then","reducers","combineReducers","profileReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","Textarea","input","meta","hasError","touched","styles","formControl","placeholder","validators","text","validate","preloader","value","maxLength","mapStateToPropsForRedirect","RedirectComponent","postsData","likeCount","profile","addPostActionCreator","newPostBody","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.f500718b.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'b4e70832-d7f2-4bf3-a44f-4c30bbf3ab78'}\r\n})\r\n\r\n\r\nexport default instance;","import instance from \"./instance\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n\r\n    login(email, password, remeberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, remeberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n\r\n\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'Hello my friend!'},\r\n        {id: 2, message: 'Good'},\r\n        {id: 3, message: 'Where are you?'},\r\n        {id: 4, message: 'Minsk!'}\r\n    ],\r\n    dialogsData: [\r\n        {id: 1, name: 'Sveta'},\r\n        {id: 2, name: 'Alex'},\r\n        {id: 3, name: 'Dima'},\r\n        {id: 4, name: 'Andrey'},\r\n        {id: 5, name: 'Valera'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessageBody\r\n            };\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, newMessage]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2TSn7\"};","module.exports = __webpack_public_path__ + \"static/media/prisoner_PNG27.f1664a55.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.73919b14.gif\";","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/profile'>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/dialogs'>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/news'>*/}\r\n            {/*        News*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/music'>*/}\r\n            {/*        Music*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={classes.item}>\r\n                <NavLink activeClassName={classes.activeLink} to='/users'>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink activeClassName={classes.activeLink} to='/settings'>*/}\r\n            {/*        Settings*/}\r\n            {/*    </NavLink>*/}\r\n            {/*</div>*/}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../Components/utils/object-helpers\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowingProgress: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n                    // state.users.map(u => {\r\n                    // if (u.id === action.userId) {\r\n                    //     return {...u, followed: true}\r\n                    // }\r\n                    // return u;\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n                //     state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUserCount: action.totalUserCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProgress: action.isFetching\r\n                    ? [...state.isFollowingProgress, action.userId]\r\n                    : state.isFollowingProgress.filter(id => !id == action.userId)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCount = (count) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUserCount: count\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleFollowingIsProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingIsProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingIsProgress(false, userId))\r\n\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    dispatch(setCurrentPage(page));\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n}\r\n\r\nexport default userReducer;","import React, {useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionsize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionsize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionsize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionsize;\r\n\r\n    return (<div className={classes.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Prev</button>}\r\n        {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [classes.selectedPage]: currentPage === p\r\n                }, classes.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber && <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>}\r\n    </div>)\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport userPhoto from '../../assets/images/prisoner_PNG27.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst User = ({user, isFollowingProgress, unfollow, follow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={isFollowingProgress.some(id => id === user.id)} onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                        : <button disabled={isFollowingProgress.some(id => id === user.id)} onClick={() => {follow(user.id)}}>Follow</button>}\r\n                        </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>\r\n                        {user.name}\r\n                    </div>\r\n                    <div>\r\n                        {user.status}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <div>\r\n                        {'user.location.country'}\r\n                    </div>\r\n                    <div>\r\n                        {'user.location.city'}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ({currentPage, totalUserCount, pageSize, onPageChanged, users, portionSize, ...props}) => {\r\n\r\n\r\n    return <div>\r\n\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUserCount} pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n\r\n        {\r\n            users.map(u => <User user={u} key={u.id} isFollowingProgress={props.isFollowingProgress} follow={props.follow} unfollow={props.unfollow} />)\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nexport const getUsers = (state) => {\r\n    return state.userReducer.users\r\n}\r\n\r\nexport const getUsersSuper = createSelector(() => {\r\n\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.userReducer.pageSize\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.userReducer.totalUserCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.userReducer.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.userReducer.isFetching\r\n}\r\n\r\nexport const  getIsFollowingProgress = (state) => {\r\n    return state.userReducer.isFollowingProgress\r\n}\r\n\r\nexport const getPortionSize = (state) => {\r\n    return state.userReducer.portionSize\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingIsProgress,\r\n    requestUsers\r\n} from '../../redux/usersPageReducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching, getIsFollowingProgress,\r\n    getPageSize, getPortionSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/useres-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.requestUsers(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUserCount={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   onPageChanged={this.onPageChanged}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   isFollowingProgress={this.props.isFollowingProgress}\r\n                   toggleFollowingIsProgress={this.props.toggleFollowingIsProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n// //     return {\r\n// //         users: state.userReducer.users,\r\n// //         pageSize: state.userReducer.pageSize,\r\n// //         totalUserCount: state.userReducer.totalUserCount,\r\n// //         currentPage: state.userReducer.currentPage,\r\n// //         isFetching: state.userReducer.isFetching,\r\n// //         isFollowingProgress: state.userReducer.isFollowingProgress\r\n// //     }\r\n// // }\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProgress: getIsFollowingProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingIsProgress,\r\n    requestUsers\r\n}), withAuthRedirect)(UsersContainer);\r\n\r\n","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='http://pngimg.com/uploads/prison/prison_PNG37.png' />\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} <button onClick={props.logout}>Log Out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initalState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {userId, email, login, isAuth}\r\n    }\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.authReducer.isAuth,\r\n    login: state.authReducer.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {Input, createField} from \"../common/formsControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/formsControls/FormControl.module.css';\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (<form onSubmit={handleSubmit}>\r\n            {createField('Login', 'email', Input, [required, maxLength30])}\r\n            {createField('Password', 'password', Input, [required, maxLength30], 'password')}\r\n            {createField(null, 'remember Me', Input, null, 'checkbox', 'RememberMe')}\r\n        { error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.remeberMe)\r\n    }\r\n    if(props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (<div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>)\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initislizedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        promise.then(() => {\r\n            dispatch(initislizedSuccess())\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            {<Component {...props} />}\r\n        </React.Suspense>\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar.jsx';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport News from './Components/News/News';\nimport Music from './Components/Music/Music';\nimport Settings from './Components/Settings/Settings';\n// import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\n// import ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(() => import(\"./Components/Dialogs/DialogsContainer\"));\nconst ProfileContainer = React.lazy(() => import(\"./Components/Profile/ProfileContainer\"));\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if(!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n        <BrowserRouter>\n          <div className='app-wrapper'>\n            <HeaderContainer/>\n            <Navbar/>\n            <div className='app-wrapper-content'>\n              <Route path='/dialogs' render={withSuspense(DialogsContainer)} />\n              <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n              <Route path='/users' render={() => <UsersContainer/>}/>\n              <Route path='/login' render={() => <Login/>}/>\n              <Route path='/news' component={News}/>\n              <Route path='/music' component={Music}/>\n              <Route path='/settings' component={Settings}/>\n            </div>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.appReducer.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profilePageReducer\";\r\nimport dialogsReducer from \"./dialogsPageReducer\";\r\nimport userReducer from \"./usersPageReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    userReducer,\r\n    authReducer,\r\n    appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3bZ0i\",\"item\":\"Navbar_item__25ZX3\",\"activeLink\":\"Navbar_activeLink__2eHPT\"};","import React from 'react';\r\nimport styles from './FormControl.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validators, type = null, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               type={type}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}/>{text}\r\n    </div>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__26MVD\",\"error\":\"FormControl_error__3gqhr\",\"formSummaryError\":\"FormControl_formSummaryError__fxO7Q\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if(value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2xsKq\",\"pageNumber\":\"Paginator_pageNumber__2SmYi\",\"selectedPage\":\"Paginator_selectedPage__3yHDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__p1oI7\",\"loginBlock\":\"Header_loginBlock__1ODKK\"};","import React from 'react'\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initalState = {\r\n    postsData: [\r\n        {id: 1, post: 'How are you?', likeCount: '2'},\r\n        {id: 2, post: 'My second post!', likeCount: '6'},\r\n        {id: 3, post: 'IT-KamaSutra cool!', likeCount: '10'}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                post: action.newPostBody,\r\n                likeCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost]\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    }\r\n}\r\n\r\nconst setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}